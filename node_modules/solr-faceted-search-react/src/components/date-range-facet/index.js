import React from "react";
import cx from "classnames";
import SearchIcon from "../icons/search";
var Datetime = require ('react-datetime');
var moment = require ('../../../node_modules/moment');


class DateRangeSearch extends React.Component {
	constructor(props) {
		super(props);

		this.state = {
			startDate: null,
			endDate: null,
			value: ""
		};
		this.onStartRangeChange = this.onStartRangeChange.bind(this);
		this.onEndRangeChange = this.onEndRangeChange.bind(this);
		this.buildQuery = this.buildQuery.bind(this);
		this.isValidDateString = this.isValidDateString.bind(this);
		this.handleSubmit = this.handleSubmit.bind(this);
}


	isValidDateString(value)
	{
		return !isNaN(Date.parse(value));
	}

	buildQuery(startDate, endDate)
	{
		console.log("DATES");
		console.log(startDate);
		console.log(endDate);
		var startVal = (startDate !== undefined && startDate !== null) ? moment.utc(startDate).toISOString() : "*";
		var endVal = (endDate !== undefined && endDate !== null) ? moment.utc(endDate).toISOString() : "NOW";
		var queryString =  startVal + " " + endVal;
		this.setState({
			value: queryString
		});
		return queryString;
	}

	onStartRangeChange(value)
	{
		if (!this.isValidDateString(value)) return;
		this.setState({
				startDate: value
			});
}

	onEndRangeChange(value)
	{
		if (!this.isValidDateString(value)) return;
		this.setState({
				endDate: value
			});
	}

	componentWillReceiveProps(nextProps) {
		this.setState({
			value: nextProps.value
		});
	}

//DO WE JUST WANT TO DO ENTER KEY AS TRIGGER?
handleInputKeyDown(ev) {
	console.log("KEY");
		if (ev.keyCode === 13) {
			this.handleSubmit();
		}
	}

	handleSubmit() {
		var queryString = this.buildQuery(this.state.startDate, this.state.endDate);
		console.log(this);
		this.props.onChange(this.props.field, queryString);
	}

	toggleExpand() {
		this.props.onSetCollapse(this.props.field, !(this.props.collapse || false));
	}

	render() {
		const { label, bootstrapCss, collapse } = this.props;

		return (
			<li className={cx({"list-group-item": bootstrapCss})}>
				<header onClick={this.toggleExpand.bind(this)}>
					<h5>
						{bootstrapCss ? (<span>
							<span className={cx("glyphicon", {
								"glyphicon-collapse-down": !collapse,
								"glyphicon-collapse-up": collapse
							})} />{" "}
						</span>) : null }
							Date Range
					</h5>
				</header>
				<div style={{display: collapse ? "none" : "block"}}>
					<Datetime id="datetime1" onChange={this.onStartRangeChange} closeOnSelect={true}/>
					<button className={cx({"btn": bootstrapCss, "btn-default": bootstrapCss, "btn-sm": bootstrapCss})} onClick={this.handleSubmit.bind(this)}>
						<SearchIcon />
					</button>
					<br/>
					<Datetime id="datetime2" onChange={this.onEndRangeChange} closeOnSelect={true}/>
					<button className={cx({"btn": bootstrapCss, "btn-default": bootstrapCss, "btn-sm": bootstrapCss})} onClick={this.handleSubmit.bind(this)}>
						<SearchIcon />
					</button>
				</div>
			</li>
		);
	}
}

DateRangeSearch.defaultProps = {
	field: "date-range-facet"
};

DateRangeSearch.propTypes = {
	bootstrapCss: React.PropTypes.bool,
	collapse: React.PropTypes.bool,
	field: React.PropTypes.string.isRequired,
	label: React.PropTypes.string,
	onChange: React.PropTypes.func,
	onSetCollapse: React.PropTypes.func
};

export default DateRangeSearch;
